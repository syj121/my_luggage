<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>证件识别</title>
    <script type="text/javascript">
      var websocket = null;
      var timerId = null;
      var bigImageEmpty = true;
      var bCardDetectedNotification = false; /* 检测到证件放入或拿出时,是否会发送通知; 当启用回调模式时, 此变量也会设置为true */
      
      var bConnected = false;
      
      var strTltle;
      var strConnect = "建立连接";
      var strDisconnect = "断开连接";
      var strDeviceStatus = "设备状态";
      var strDeviceConnected = "设备已连接";
      var strDeviceName = "设备名称"
      var strDeviceSerialno = "设备序列号";
      var strDevNotConnect = "设备未连接";
      var strDescOfWebsocketError = "websocket连接出错,请确认WebSocket服务正常运行，并重新建立连接";
      var strDescFailSetRFID = "设置是否读取芯片信息出错";
      var strDescFailSetVIZ = "设置是否识别版面信息出错";
      var strPlaceHolderCardTextInfo = "此处显示从证件读取的文本信息";
      var strDescFailSendWebsocket = "向后台服务发送指令出错";
      var strDeviceOffLine = "设备掉线";
      var strDeviceReconnected = "设备已重新连接";
      var strWebDescDeviceNotFound = "WebSocket已连接, 未检测到设备";
      var strWebDescRequireRestartSvc = "WebSocket服务需要重新启动";
      var strWebDescAskForSupport = "WebSocket服务遇到问题, 请联系管理员";
      var strWebDescRequireReconnect = "WebSocket服务要求web端重新建立连接";
      
      window.onload = function() {
        document.getElementById("connection").value = strConnect;
      }
      
      /* 关闭页面前，先关闭websocket连接 */
      window.onbeforeunload = function(event) {
        if (websocket !== null) {
          websocket.close();
          websocket = null;
        }
      }
      
      function setConnBtnValue() {
        if (bConnected) {
          document.getElementById("connection").value = strDisconnect;
        } else {
          document.getElementById("connection").value = strConnect;
        }
      }
      
      /* 建立WebSocket连接并初始化websocket属性 */
      function connect() {
        try {
          var host = "ws://127.0.0.1:90/echo";
          if (websocket != null) {
            websocket.close();
          }
          
          websocket = new WebSocket(host);
          
          /* 成功建立websocket连接 */
          websocket.onopen = function() {
            bConnected = true;
            setConnBtnValue();
            
            getWebConstants();
            
            setDefaultSettings();
            timerId = setInterval(getDeviceStatus(), 1000);
          }
          
          /* 响应后台服务的应答报文或通知报文 */
          websocket.onmessage = function(event) {
            var retmsg = event.data;
            var jsonMsg;
            console.log(retmsg);
            try {
              jsonMsg = JSON.parse(retmsg);
              if (jsonMsg.Type == 'Reply') {
                if (jsonMsg.hasOwnProperty('Commands')) {
                  for (var index in jsonMsg.Commands) {
                    processReply(jsonMsg.Commands[index]);
                  }
                } else {
                  processReply(jsonMsg);
                }
              } else if (jsonMsg.Type == 'Notify') {
                processNotify(jsonMsg);
              }
              return;
            } catch (exception) {
              // document.getElementById("msg").innerHTML = "Parse error: " + event.data;
            }
          }
          
          /* 主动或被动关闭websocket连接时触发，清空页面信息 */
          websocket.onclose = function() {
            bConnected = false;
            setConnBtnValue();
            // document.getElementById('connection').value = strConnect; // "建立连接";
            clrDeviceStatus();
            clrTextInfo();
            clrImages(true);
            // websocket = null;
            
            if (websocket !== null) {
              if (websocket.readyState == 3) {
                document.getElementById('deviceStatus').innerHTML = strDescOfWebsocketError;
                document.getElementById('deviceStatus').style.color = '#f00';
              }
              
              websocket.close();
              websocket = null;
            }
          }
          
          /* websocket出错事件，清空页面信息并报警 */
          websocket.onerror = function(evt) {
            bConnected = false;
            setConnBtnValue();
            // document.getElementById('connection').value = strConnect; // "建立连接";
            clrDeviceStatus();
            clrTextInfo();
            clrImages(true);
          }
          
        } catch (exception) {
          // document.getElementById("msg").innerHTML = "WebSocket  error";
        }
      }
      
      /* 页面点击建立连接按钮时触发此函数 */
      function onConnection() {
        if (document.getElementById("connection").value == strConnect /*'建立连接'*/) {
          if (websocket !== null) {
            websocket.close();
            websocket = null;
          }
          
          connect();
        } else {
          if (websocket !== null) {
            websocket.close();
            websocket = null;
          }
        }
      }
      
      /* 页面点击断开连接按钮是触发此函数 */
      function disConnect() {
        if (websocket != null) {
          websocket.close();
          websocket = null;
        }
      }
      
      /* 页面向后台发送指令，后台返回应答 */
      function processReply(msgReply) {
        if (msgReply.Command == 'Get') {
          if (msgReply.Succeeded == 'Y') { /* Get指令成功执行，从应答报文中解析出对应的结果 */
            if (msgReply.Operand == 'DeviceName') { /* 应答报文中的设备名称 */
              document.getElementById('deviceName').innerHTML = /* strDeviceName + ":" + */ msgReply.Result;
            } else if (msgReply.Operand == 'DeviceSerialNo') { /* 应答报文中的设备序列号 */
              document.getElementById('deviceSerial').innerHTML = /* strDeviceSerialno + ":" + */ msgReply.Result;
            } else if (msgReply.Operand == 'OnLineStatus') { /* 应答报文中的设备在线状态 */
              document.getElementById('deviceStatus').innerHTML = /* strDeviceStatus + ":" + */ msgReply.Result;
              if (msgReply.Result == strDeviceConnected) {
                document.getElementById('deviceStatus').style.color = '#000';
                document.getElementById('deviceNameKey').style.display = 'inline';
                document.getElementById('deviceSerialKey').style.display = 'inline';
              }
            }else if(msgReply.Operand=='VersionInfo'){
              document.title = strTitle + "V" + msgReply.Result;
              document.getElementsByTagName("h1")[0].innerText = strTitle + "V" + msgReply.Result;
            }else if (msgReply.Operand == 'WebConstant') {
              if (msgReply.Param == 'CardRecogSystem') {
                strTitle = msgReply.Result;
              } else if (msgReply.Param == 'Connect') {
                strConnect = msgReply.Result;
                setConnBtnValue();
                // document.getElementById("connection").value = msgReply.Result;
              } else if (msgReply.Param == 'Disconnect') {
                strDisconnect = msgReply.Result;
                setConnBtnValue();
                // document.getElementById("connection").value = msgReply.Result;
              } else if (msgReply.Param == 'Save') {
                document.getElementById("btnSaveSettings").value = msgReply.Result;
              } else if (msgReply.Param == 'IDCANCEL') {
                document.getElementById("btnCancelSave").value = msgReply.Result;
              } else if (msgReply.Param == 'DeviceStatus') {
                strDeviceStatus = msgReply.Result;
              } else if (msgReply.Param == 'DeviceName') {
                strDeviceName = msgReply.Result;
                document.getElementById('deviceNameKey').innerHTML = strDeviceName + ":";
              } else if (msgReply.Param == 'DeviceSerialno') {
                strDeviceSerialno = msgReply.Result;
                document.getElementById('deviceSerialKey').innerHTML = strDeviceSerialno + ":";
              } else if (msgReply.Param == 'DeviceNotConnected') {
                strDevNotConnect = msgReply.Result;
              } else if (msgReply.Param == 'DescOfWebsocketError') {
                strDescOfWebsocketError = msgReply.Result;
              } else if (msgReply.Param == 'DescFailSetRFID') {
                strDescFailSetRFID = msgReply.Result;
              } else if (msgReply.Param == 'DescFailSetVIZ') {
                strDescFailSetVIZ = msgReply.Resultl;
              } else if (msgReply.Param == 'PlaceHolderCardTextInfo') {
                // strPlaceHolderCardTextInfo = msgReply.Result;
                // document.getElementById("msg").setAttribute("placeholder", strPlaceHolderCardTextInfo);
              } else if (msgReply.Param == 'DescFailSendWebsocket') {
                strDescFailSendWebsocket = msgReply.Result;
              } else if (msgReply.Param == 'DeviceOffLine') {
                strDeviceOffLine = msgReply.Result;
              } else if (msgReply.Param == 'DeviceReconnected') {
                strDeviceReconnected = msgReply.Result;
              } else if (msgReply.Param == 'WebDescDeviceNotFound') {
                strWebDescDeviceNotFound = msgReply.Result;
              } else if (msgReply.Param == 'WebDescRequireRestartSvc') {
                strWebDescRequireRestartSvc = msgReply.Result;
              } else if (msgReply.Param == 'WebDescAskForSupport') {
                strWebDescAskForSupport = msgReply.Result;
              } else if (msgReply.Param == 'WebDescRequireReconnect') {
                strWebDescRequireReconnect = msgReply.Result;
              } else if (msgReply.Param == 'DeviceConnected') {
                strDeviceConnected = msgReply.Result;
              }
            }
          }
        } else if (msgReply.Command == 'Set') {
          if (msgReply.Succeeded == 'N') { /* Set指令未生效 */
            if (msgReply.Operand == 'RFID') {
              document.getElementById("msg").innerHTML = strDescFailSetRFID;
            } else if (msgReply.Operand == 'VIZ') {
              //document.getElementById("msg").innerHTML = strDescFailSetVIZ;
            }
          }
        }
      }
      
      /* 后台服务主动向web端发送消息，包括读卡信息、证件图像以及异常状态通知等 */
      function processNotify(msgNotify) {
        if (msgNotify.Command == 'Display') {
          if (msgNotify.Param == strDeviceOffLine) {
            clrDeviceStatus();
            document.getElementById('deviceStatus').innerHTML = strWebDescDeviceNotFound; // "WebSocket已连接, 未检测到设备";
            document.getElementById('deviceStatus').style.color = '#f00';
          } else if (msgNotify.Param == strDeviceReconnected) {
            getDeviceStatus();
          }
        } else if (msgNotify.Command == 'Reconnect') {
          clrDeviceStatus();
          document.getElementById('deviceStatus').innerHTML = strWebDescRequireReconnect; // "WebSocket服务要求web端重新建立连接，正在重连";
          document.getElementById('deviceStatus').style.color = '#f00';
          disConnect();
          connect();
        } else if (msgNotify.Command == 'AskSupport') {
          clrDeviceStatus();
          document.getElementById('deviceStatus').innerHTML = strWebDescAskForSupport; // "WebSocket服务遇到问题：" + msgNotify.Param;
          document.getElementById('deviceStatus').style.color = '#f00';
        } else if (msgNotify.Command == 'RestartService') {
          /* disConnect(); */
          document.getElementById('deviceStatus').innerHTML = strWebDescRequireRestartSvc; // "WebSocket服务需要重新启动，请联系管理员";
          document.getElementById('deviceStatus').style.color = '#f00';
        } else if (msgNotify.Command == 'Save') {
          if (msgNotify.Operand == 'CardContentText') {
            clrImages(false);
            displayCardContent(msgNotify.Param);
          } else if (msgNotify.Operand == 'Images') {
            clrImages(false);
            displayImages(msgNotify.Param);
          }
        } else if (msgNotify.Command == 'CardDetected') {
          clrTextInfo()
          clrImages(true);
        }
      }
      
      /*  解析证件文本信息（JSON格式）并展示到页面 */
      function displayCardContent(cardContent) {
        var domTextArea = document.getElementById('divTextArea');
        var domTextItem;
        var domKeySpan;
        var domValInput;
        
        domTextArea.innerHTML = "";
        
        for (var key in cardContent) {
          domTextItem = document.createElement('div');
          domKeySpan = document.createElement('span');
          domValInput = document.createElement('input');
          
          domTextItem.className = 'cTextItem';
          
          domKeySpan.className = 'cTextKey';
          domKeySpan.innerText = key;
          
          domValInput.className = 'cTextValue';
          domValInput.setAttribute('readonly', 'readonly');
          domValInput.value = cardContent[key];
          
          domTextItem.appendChild(domKeySpan);
          domTextItem.appendChild(domValInput);
          domTextArea.appendChild(domTextItem);
        }
      }
      
      /* 如果存在名为 imageName的图像，则展示到页面对应的位置 */
      function tryDisplayImage(images, imageName, domId) {
        if (images.hasOwnProperty(imageName)) {
          document.getElementById(domId).src = images[imageName];
          
          if (bigImageEmpty) {
            document.getElementById("imageDisplay").src = images[imageName];
            bigImageEmpty = false;
          }
        }
      }
      
      /* 检查由后台发送的图像数据中包含哪些图像，并展示到页面 */
      function displayImages(images) {
        tryDisplayImage(images, "White", "imageWhite");
        tryDisplayImage(images, "IR", "imageIR");
        tryDisplayImage(images, "UV", "imageUV");
        tryDisplayImage(images, "OcrHead", "imageOcrHead");
        tryDisplayImage(images, "ChipHead", "imageChipHead");
        tryDisplayImage(images, "SidHead", "imageChipHead");
      }
      
      function clrTextInfo() {
        document.getElementById("divTextArea").innerHTML = "";
      }
      
      /* 清空页面上的图像信息 */
      function clrImages(bForce) {
        if (bForce || !bCardDetectedNotification) {
          document.getElementById("imageWhite").src = "png/Home_pic_bgicon.png";
          document.getElementById("imageIR").src = "png/Home_pic_bgicon.png";
          document.getElementById("imageUV").src = "png/Home_pic_bgicon.png";
          document.getElementById("imageOcrHead").src = "png/Home_pic_bgicon.png";
          document.getElementById("imageChipHead").src = "png/Home_pic_bgicon.png";
          document.getElementById("imageDisplay").src = "png/Home_pic_kong.png";
          bigImageEmpty = true;
        }
      }
      
      /* 将发送数据的操作做了封装 */
      function sendJson(jsonData) {
        try {
          if (websocket !== null) {
            websocket.send(JSON.stringify(jsonData));
          }
        } catch (exception) {
          //document.getElementById("msg").innerHTML = strDescFailSendWebsocket;
        }
      }
      
      /* 获取设备状态、核心版本，一次性发送4条指令 */
      function getDeviceStatus() {
        var request = {
          Type: "Request",
          Commands: [
            {Command:"Get", Operand:"OnLineStatus"},  /* 获取设备在线状态 */
            {Command:"Get", Operand:"DeviceName"},    /* 获取设备名称 */
            {Command:"Get", Operand:"DeviceSerialNo"}, /* 获取设备序列号 */
            {Command:"Get", Operand:"VersionInfo"} /* 获取核心版本信息 */
          ]
        };
        
        sendJson(request);
      }
      
      /* 清空页面上显示的设备状态信息 */
      function clrDeviceStatus() {
        document.getElementById("deviceStatus").innerHTML = strDevNotConnect;
        document.getElementById("deviceNameKey").style.display = "none";
        document.getElementById('deviceName').innerHTML = "";
        document.getElementById("deviceSerialKey").style.display = "none";
        document.getElementById('deviceSerial').innerHTML = "";
      }
      
      /* 设置读卡参数，默认识别芯片信息、识别版面信息 */
      function setDefaultSettings() {
        var request = {
          Type: "Request",
          Commands: [
            {Command:"Set", Operand:"RFID", Param:"Y"}, /* 设置识别芯片信息 */
            {Command:"Set", Operand:"VIZ", Param:"Y"}   /* 设置识别版面信息 */
          ]
        };
        
        sendJson(request);
      }
      
      /* 对证件进行拍照 */
      function takePhoto() {
        var request = {
          Type: "Request",
          Command: "Set",
          Operand: "TakePhoto",
          Param: 0
        };
        var requestGetBase64 = {
          Type: "Request",
          Command: "Get",
          Operand: "Base64Image"
        };
        
        sendJson(request);
        sendJson(requestGetBase64);
      }
      
      
      /* 选择要放大观看的图像 */
      function showImage(domId) {
        document.getElementById("imageDisplay").src = document.getElementById(domId).src;
      }
      
      function showSettingPage() {
        document.getElementById("settings").style.display = "block";
        document.getElementById("control").style.display = "none";
        document.getElementById("cardInfo").style.display = "none";
      }
      
      function checkStatusToString(domId) {
        if (document.getElementById(domId).checked) {
          return "True";
        } else {
          return "False";
        }
      }
      
      function SaveSettings() {
        bCardDetectedNotification = document.getElementById("CallBack").checked || document.getElementById("CardDetect").checked;
        
        var request = {
          Type: "Request",
          Commands: [
            {Command:"Set", Operand:"VIZ", Param:checkStatusToString("RecogVIZ")},
            {Command:"Set", Operand:"RFID", Param:checkStatusToString("RecogRFID")},
            {Command:"Set", Operand:"Rejection", Param:checkStatusToString("Rejection")},
            {Command:"Set", Operand:"IfEnableCallback", Param:checkStatusToString("CallBack")},
            {Command:"Set", Operand:"IfNotifyCardDetected", Param:checkStatusToString("CardDetect")},
            {Command:"Set", Operand:"MRZOnWhiteImage", Param:checkStatusToString("MRZOnWhite")},
            {Command:"Set", Operand:"IfDetectUVDull", Param:checkStatusToString("UVDull")},
            {Command:"Set", Operand:"IfDetectFibre", Param:checkStatusToString("Fibre")},
            {Command:"Set", Operand:"IfCheckSourceType", Param:checkStatusToString("SourceType")},
            {Command:"Set", Operand:"BarCodeRecog", Param:checkStatusToString("BarCode")}
          ]
        };
        
        sendJson(request);
        
        document.getElementById("settings").style.display = "none";
        document.getElementById("control").style.display = "block";
        document.getElementById("cardInfo").style.display = "block";
      }
      
      function DonnotSaveSettings() {
        document.getElementById("settings").style.display = "none";
        document.getElementById("control").style.display = "block";
        document.getElementById("cardInfo").style.display = "block";
      }
      
      function getWebConstants() {
        var request = {
          Type: "Request",
          Commands: [
            {Command:"Get", Operand:"WebConstant", Param:"CardRecogSystem"},
            {Command:"Get", Operand:"WebConstant", Param:"Connect"},
            {Command:"Get", Operand:"WebConstant", Param:"Disconnect"},
            {Command:"Get", Operand:"WebConstant", Param:"Save"},
            {Command:"Get", Operand:"WebConstant", Param:"IDCANCEL"},
            {Command:"Get", Operand:"WebConstant", Param:"DeviceStatus"},
            {Command:"Get", Operand:"WebConstant", Param:"DeviceName"},
            {Command:"Get", Operand:"WebConstant", Param:"DeviceSerialno"},
            {Command:"Get", Operand:"WebConstant", Param:"DeviceNotConnected"},
            {Command:"Get", Operand:"WebConstant", Param:"DescOfWebsocketError"},
            {Command:"Get", Operand:"WebConstant", Param:"DescFailSetRFID"},
            {Command:"Get", Operand:"WebConstant", Param:"DescFailSetVIZ"},
            {Command:"Get", Operand:"WebConstant", Param:"PlaceHolderCardTextInfo"},
            {Command:"Get", Operand:"WebConstant", Param:"DeviceOffLine"},
            {Command:"Get", Operand:"WebConstant", Param:"DeviceReconnected"},
            {Command:"Get", Operand:"WebConstant", Param:"DescFailSendWebsocket"},
            {Command:"Get", Operand:"WebConstant", Param:"WebDescDeviceNotFound"},
            {Command:"Get", Operand:"WebConstant", Param:"WebDescRequireRestartSvc"},
            {Command:"Get", Operand:"WebConstant", Param:"WebDescAskForSupport"},
            {Command:"Get", Operand:"WebConstant", Param:"WebDescRequireReconnect"},
            {Command:"Get", Operand:"WebConstant", Param:"DeviceConnected"}
          ]
        };
        
        sendJson(request);
      }
      
    </script>
    <style>
      body {background:#F1F1F1;}
      
      div#divPageTitle {width:100%; height:89px; background:blue; background:#0055ff; color:#FFFFFFFF;}
      div#divPageTitle h1 {width:100%; margin:0; text-align:center; vertical-align:middle; padding-top:23px;}
      div#pannel { top:0; width:calc(100% - 100px); height:calc(100% - 99px); padding-top:10px;}
      div#pannel div#settings {position:relative; width:58%; margin:0 auto; padding:2px; display:none; background:#E5E5E5;}
      
      div#pannel div#control {position:relative; width:1019px; height:121px; margin:0 auto; display:block; background:#FFFFFF; border-radius:5px;}
      div#pannel div#control input#connection {display:inline-block; float:left; width:149px; height:30px; margin-top:22px; margin-left:13px; cursor:hand; border:none; background-color:#0055ff; color:#FFFFFFFF; font-weight:bold; font-size:15px; border-radius:25px;}
      div#pannel div#control input#connection:hover {background-color:#1166FF;}
      div#pannel div#control input#connection:active {margin-left:14px;}
      div#pannel div#control select#httpOrHttps {display:inline-block; width:80px; height:30px; margin-top:21px; margin-left:20px; padding-left:15px; border-radius:25px; font-size:14px;}
      div#pannel div#control div#divPaddingDummy {display:inline-block; width:100%; padding-bottom:28px;}
      div#pannel div#control div#divDevStatus {display:inline-block; padding-left:20px;}
      div#pannel div#control div#divDevStatus span#deviceStatus {color:#333333; font-family:"Microsoft YaHei"; font-size:16px;}
      div#pannel div#control div#divDevStatus span.cDevStatusKey {color:#999999; font-family:"Microsoft YaHei"; font-size:16px; margin-left:46px;}
      
      div#pannel div#cardInfo {position:relative; width:1019px; margin:0 auto; display:block; margin-top:15px;}
      div#pannel div#cardInfo div#divTextArea {position:relative; width:100%; height:260px; margin-bottom:15px; background:#FFFFFF; vertical-align:middle; padding-top:10px; padding-bottom:15px; overflow-y:auto; overflow-x:hidden;  border-radius:5px;}
      div#pannel div#cardInfo div#divTextArea::-webkit-scrollbar {
        width:8px;
        background-color:#FFFFFFFF;
      }
      div#pannel div#cardInfo div#divTextArea::-webkit-scrollbar-track {
        width:10px;
      }
      div#pannel div#cardInfo div#divTextArea::-webkit-scrollbar-thumb {
        background-color:#E0E0E0;
        border-radius:5px;
      }
      div#pannel div#cardInfo div#divTextArea::-webkit-scrollbar-thumb:hover {
        background-color:#C0C0C0;
        border-radius:5px;
      }
      
      div#pannel div#cardInfo div#divTextArea div.cTextItem {display:block; width:100%; min-height:36px; margin-top:10px;}
      div#pannel div#cardInfo div#divTextArea div.cTextItem span.cTextKey {display:inline-block; width:120px; padding-left:16px; color:#999999; font-family:"Microsoft YaHei"; font-size:16px; vertical-align:middle; word-wrap:break-word; word-break:break-all; white-space:pre-wrap;}
      div#pannel div#cardInfo div#divTextArea div.cTextItem input.cTextValue {display:inline-block; width:calc(100% - 200px); min-height:36px; color:#333333; font-family:"OCRB"; font-size:16px; vertical-align:middle; border-radius:5px; border:none; background-color:#F1F1F1; padding-left:21px; }
      
      div#pannel div#cardInfo div#divImages {position:absolute; width:100%; height:325px; background-color:#F1F1F1; display:block;}
      div#pannel div#cardInfo div#divImages div#divSmallImages {position:absolute; width:78px; height:100%; display:inline-block; margin-right:10px;}
      div#pannel div#cardInfo div#divImages div#divSmallImages img {cursor:hand;}
      div#pannel div#cardInfo div#divImages div#divSmallImages div.cDivSmallImage {display:block; height:calc(20% - 7px); width:100%; display:flex; justify-content: center; align-items:center; margin-bottom:10px; background-color:#FFFFFF; padding:2px;}
      div#pannel div#cardInfo div#divImages div#divSmallImages div.cDivSmallImage img.cImage     {position:relative; max-height:100%; max-width:100%; display:block;}
      div#pannel div#cardInfo div#divImages div#divSmallImages div.cDivSmallImage img.cImageLast {position:relative; max-height:100%; max-width:100%; display:block;}
      
      div#pannel div#cardInfo div#divImages div#divBigImage {position:absolute; top:0; left:88px; height:100%; width:calc(100% - 88px); display:flex; justify-content: center; align-items:center; background-color:#FFFFFF; border-radius:5px; padding-top:12px; padding-bottom:14px;}
      div#pannel div#cardInfo div#divImages div#divBigImage .bigImage {position:relative; float:left; max-width:100%; max-height:100%;}
    </style>
  <head>
  <body>
    <div id="divPageTitle">
      <h1>证件识别系统</h1>
    </div>
    <div id="pannel" style="display:block; margin:0 auto; width:80%; background:#F1F1F1;">
      <div id="settings" style="display:none">
        <input type="checkbox" id="RecogVIZ" checked/>识别版面信息<br/>
        <input type="checkbox" id="RecogRFID" checked/>读取芯片信息<br/>
        <input type="checkbox" id="Rejection"/>启用拒识功能<br/>
        <input type="checkbox" id="BarCode"/>启用条码识别<br/>
        <input type="checkbox" id="CallBack"/>启用回调模式<br/>
        <input type="checkbox" id="CardDetect"/>启用检测拿出<br/>
        <input type="checkbox" id="MRZOnWhite"/>白光图重新识别MRZ<br/>
        <input type="checkbox" id="UVDull"/>检测紫外迟钝特性<br/>
        <input type="checkbox" id="Fibre"/>检测紫外纤维<br/>
        <input type="checkbox" id="SourceType"/>检测是否复印件<br/>
        <input type="button" id="btnSaveSettings" value="保存" onclick="SaveSettings();"/>
        <input type="button" id="btnCancelSave"   value="取消" onclick="DonnotSaveSettings();"/>
      </div>
      <div id="control">
        <input type="button" value="设置识读选项" onclick="showSettingPage();" style="display:none"/>
        <input type="button" data-value="ToBeConnect" id="connection" onclick="onConnection();"/>
        <select id="httpOrHttps">
          <option value="http">http</option>
          <option value="https">https</option>
        </select>
        <div id="divPaddingDummy">
        </div>
        <div id="divDevStatus">
          <span id="deviceStatus">未连接到WebSocket服务</span>
          <span id="deviceNameKey" class="cDevStatusKey" style="display:none">设备名称:</span>
          <span id="deviceName"></span>
          <span id="deviceSerialKey" class="cDevStatusKey" style="display:none">设备序列号:</span>
          <span id="deviceSerial"></span>
        </div>
      </div>
      <div id="cardInfo">
        <div id="divTextArea">
        </div>
        <div id="divImages">
          <div id="divSmallImages">
            <div class="cDivSmallImage"><img id="imageWhite" class="cImage" src="png/Home_pic_bgicon.png" onclick="showImage('imageWhite');"/></div>
            <div class="cDivSmallImage"><img id="imageIR" class="cImage" src="png/Home_pic_bgicon.png" onclick="showImage('imageIR');"/></div>
            <div class="cDivSmallImage"><img id="imageUV" class="cImage" src="png/Home_pic_bgicon.png" onclick="showImage('imageUV');"/></div>
            <div class="cDivSmallImage"><img id="imageOcrHead" class="cImage" src="png/Home_pic_bgicon.png" onclick="showImage('imageOcrHead');"/></div>
            <div class="cDivSmallImage"><img id="imageChipHead" class="cImage" src="png/Home_pic_bgicon.png" onclick="showImage('imageChipHead');"/></div>
          </div>
          <div id="divBigImage" align="center">
            <img id="imageDisplay" class="bigImage" src="png/Home_pic_kong.png"/>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
